plugins {
    id 'java-library'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

group = "${projectGroup}"
version = "${applicationVersion}"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(javaVersion.toInteger())
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    springAiVersion = "1.0.0-M4"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

dependencies {
    // Spring Web + Validation
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // Thymeleaf (관리 UI 또는 테스트용)
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JPA + Hibernate
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate.orm:hibernate-core:6.4.4.Final' // Hibernate 6 이상일 경우

    // DB Driver
    implementation 'org.postgresql:postgresql:42.7.3'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //PostgreSQL + pgvector
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.testcontainers:postgresql'
    implementation("org.hibernate.orm:hibernate-vector:6.4.0.Final")

    //monitoring
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
    implementation 'org.springframework.ai:spring-ai-pgvector-store-spring-boot-starter'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.springframework.ai:spring-ai-starter-vector-store-redis'
    implementation 'org.springframework.ai:spring-ai-redis-store'

    
}

bootJar {
    enabled = true
    archiveFileName = 'app.jar' // Dockerfile에서 COPY app.jar 와 일치하게
    mainClass = 'nbc.devmountain.MountainApplication'
}

tasks.named('test') {
    useJUnitPlatform()
}
